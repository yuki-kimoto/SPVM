# Copyright (c) 2024 Yuki Kimoto
# MIT License

class Native::Runtime::Info {
  
  use Native::Runtime::Info;
  use StringList;
  
  # Fields
  has runtime : Native::Runtime;
  
  # Class Methods
  static method new : Native::Runtime::Info ($runtime : Native::Runtime) {
    
    my $self = new Native::Runtime::Info;
    
    $self->{runtime} = $runtime;
    
    return $self;
  }
  
  method get_basic_type_names : string[] () {
    
    my $runtime = $self->{runtime};
    
    my $basic_types_length = $runtime->get_basic_types_length;
    
    my $basic_type_names = new string [$basic_types_length];
    
    for (my $basic_type_id = 0; $basic_type_id < $basic_types_length; $basic_type_id++) {
      my $basic_type = $runtime->get_basic_type_by_id($basic_type_id);
      my $basic_type_name = $basic_type->get_name;
      $basic_type_names->[$basic_type_id] = $basic_type_name;
    }
    
    return $basic_type_names;
  }
  
  method get_class_names : string[] () {
    
    my $class_names_list = StringList->new;
    
    my $basic_type_names = $self->get_basic_type_names;
    
    for my $basic_type_name (@$basic_type_names) {
      if (($basic_type_name->[0] >= 'A' && $basic_type_name->[0] <= 'Z') && !Fn->contains($basic_type_name, "::anon::")) {
        $class_names_list->push($basic_type_name);
      }
    }
    
    my $class_names = $class_names_list->to_array;
    
    return $class_names;
  }
  
}
