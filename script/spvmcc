#!perl

use strict;
use warnings;

use SPVM();
use SPVM::Builder::Exe;
use SPVM::Builder::Util;

SPVM::Builder::Util::getopt
  'h|help'          => \my $help,
  'v|version'       => \my $show_version,
  'o|output=s'        => \my $output_file,
  'B|build-dir=s'   => \my $build_dir,
  'I|module-dir=s' => \my @module_dirs,
  'q|quiet'   => \my $quiet,
  'f|force' => \my $force,
  'c|config=s' => \my $config_file,
  'p|print-dependent-resources' => \my $print_dependent_resources,
;

if ($help) {
  print SPVM::Builder::Util::extract_usage;
}
elsif ($show_version) {
  my $version_string = "spvmcc v$SPVM::VERSION";
  print "$version_string\n";
}
else {
  my $class_name = shift;
  unless (defined $class_name) {
    die SPVM::Builder::Util::extract_usage;
  }
  
  my @original_module_dirs = @module_dirs;
  push @module_dirs, map { "$_/SPVM" } @INC;
  unshift @INC, map { $_ =~ s/[\\\/]SPVM$//; $_; } @original_module_dirs;

  my $build_exe = SPVM::Builder::Exe->new(
    build_dir => $build_dir,
    module_dirs => \@module_dirs,
    output_file => $output_file,
    class_name => $class_name,
    quiet => $quiet,
    force => $force,
    config_file => $config_file,
  );
  if ($print_dependent_resources) {
    my $lines = $build_exe->get_dependent_resource_lines;
    print "$_\n" for @$lines;
  }
  else {
    $build_exe->build_exe_file;
  }
}


=encoding utf8

=head1 Name

spvmcc - SPVM compiler to create exe file

=head1 Usage

  usage: spvmcc [<options>] <class_name>
    
    spvmcc -I lib/SPVM -o myapp Myapp

  options:
    -h, --help                     Show this message
    -v, --version                  Show the version
    -o, --output                   Output file name
    -I, --module-dir <directory>   Add SPVM module searching directory
    -B, --build-dir <directory>    Building diretory
    -q, --quiet                    Quiet output
    -f, --force                    Force compile and link
    -c, --config                   Config file
    
=head1 Description

spvmcc is SPVM compiler to create executable file.

=head1 Copyright & License

Copyright 2023 Yuki Kimoto. All Rights Reserved.

MIT License.
