#!perl

use strict;
use warnings;

use SPVM::Builder::Util;
use SPVM::Global;

SPVM::Builder::Util::getopt
  # spvmcc and spvm shared
  'h|help'          => \my $help,
  'v|version'       => \my $show_version,
  'I|include-dir=s' => \my @include_dirs,
  'B|build-dir=s'   => \my $build_dir,
  
  # spvm only
  'E=s' => \my $source,
  'e=s' => \my $source_in_main,
  '-M=s' => \my @use_class_names,
;

unshift @INC, map { $_ =~ s/[\\\/]SPVM$//; $_; } @include_dirs;

if ($help) {
  print SPVM::Builder::Util::extract_usage;
  exit 0;
}
elsif ($show_version) {
  my $version_string = "spvm v$SPVM::VERSION";
  print "$version_string\n";
  exit 0;
}

if (defined $build_dir) {
  $ENV{SPVM_BUILD_DIR} = $build_dir;
}

my $script_name = shift;

if (!defined $script_name && !defined $source_in_main && !defined $source) {
  die SPVM::Builder::Util::extract_usage;
}

if (defined $script_name && defined $source_in_main) {
  die "[spvm command]Specifying both <script_name> and -e option is not allowed.";
}

if (defined $script_name && defined $source) {
  die "[spvm command]Specifying both <script_name> and -E option is not allowed.";
}

if (defined $source_in_main && defined $source) {
  die "[spvm command]Specifying both -E option and -e option is not allowed.";
}

if (defined $source_in_main) {
  $0 = "-e";
  
  $source = "
class {
static method main : void () {
#line 1
$source_in_main
}
}
";

}
elsif (defined $script_name) {
  
  $0 = $script_name;
  
  open my $script_fh, '<', $script_name
    or die "Can't open file \"$script_name\":$!";
    
  $source = do { local $/; <$script_fh> };
  
  $source = "#file \"$script_name\"\x{A}$source";
}

for my $use_class_name (@use_class_names) {
  SPVM::Global::build_class($use_class_name, __FILE__, __LINE__);
}

SPVM::Global::build_class('Native', __FILE__, __LINE__);
SPVM::Global::build_class('Native::MethodCall', __FILE__, __LINE__);

my $anon_class_name = SPVM::Global::build_anon_class($source, __FILE__, __LINE__);

SPVM::Native->check_bootstrap_method($anon_class_name);

my $spvm_anon_class_name = "SPVM::$anon_class_name";

$spvm_anon_class_name->main;

=encoding utf8

=head1 Name

spvm - Executing SPVM programs

=head1 Description

The spvm command executes SPVM programs.

=head1 Usage

  usage: spvm [<options>] <script_name>
    
    spvm myapp.spvm
    
  options:
    -h, --help                     Shows this message
    -v, --version                  Shows the version
    -I, --include-dir <directory>  Adds a include directory
    -B, --build-dir <directory>    Build diretory
    -e <source>                    Executes a program source code in main method.

=head1 Details

  spvm [<options>] <script_name>

The C<spvm> command executes a SPVM program.

C<E<lt>optionsE<gt>> are L<options|/"Options">.

C<E<lt>script_nameE<gt>> is a script name that contains a L<bootstrap method|SPVM::Document::Language::Class/"Bootstrap Method"> in an L<anon class|SPVM::Document::Language::Class/"Anon Class">.

  class {
    static method main : void () {
      
    }
  }

See L<Class Search Directories|SPVM::Document::Language::Class/"Class Search Directories"> about default class search directories.

See L<SPVM::Document::EnvironmentVariables> about available environment variables.

=head1 Options

=head2 --help

Outputs how to use the C<spvm> command to standard output.

=head2 -h

  -h

Same as L</"--help">.

=head2 --version

Outputs the version of the C<spvm> command to standard output. This version is the same as the version of L<SPVM>.

=head2 -v

  -v

Same as L</"--version">.

=head2 --include-dir

  --include-dir <directory>

Prepends C<E<lt>directoryE<gt>> to L<class search directories|SPVM::Document::Language::Class/"Class Search Directories">

This option can be specified multiple times.

  --include-dir dir1 --include-dir dir2

In this case, class search directories becomes the following.

  [dir1, dir2, default_dirs]

=head2 -I

  -I <directory>

Same as L</"--include-dir">.

=head2 --build-dir

  --build-dir <directory>

Sets L<SPVM_BUILD_DIR|SPVM::Document::EnvironmentVariables/"SPVM_BUILD_DIR"> environment variable to C<E<lt>directoryE<gt>>.

=head2 -B

  -B <directory>

Same as L</"--build-dir">.

=head2 -E

  -E <source>

Executes a source code E<lt>sourceE<gt>.

Examples:

  spvm -E 'class { static method main : void () { say "Hello World!"; } }';

=head2 -e

  -e <source>

Executes a source code E<lt>sourceE<gt> in C<main> method.

Examples:

  spvm -e 'say "Hello World!";';

=head1 Copyright & License

Copyright 2023 Yuki Kimoto. All Rights Reserved.

MIT License.
