class TestCase::Module::Scope::Guard {
  use Scope::Guard;
  use Fn;
  
  static method basic : int () {
  
    # Executing the handler at the end of the scope
    {
      my $string = (mutable string)copy "abc";
      {
        my $handler = [has string : mutable string = $string] method : void () {
          my $string = $self->{string};
          
          $string->[0] = 'A';
          $string->[1] = 'B';
        };
        my $guard = Scope::Guard->new($handler);

        unless ($handler == $guard->handler) {
          return 0;
        }
        
        $string->[0] = 'P';
      }
      
      unless ($string eq "ABc") {
        return 0;
      }
    }

    # Exceptions
    {
      my $handler : Scope::Guard::Handler;
      eval { Scope::Guard->new($handler); } ;
      unless (Fn->contains($@, "\$handler must be defined")) {
        return 0;
      }
    }
    
    $@ = undef;
    
    return 1;
  }
}
