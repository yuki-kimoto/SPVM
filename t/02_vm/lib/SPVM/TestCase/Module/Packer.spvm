class TestCase::Module::Packer {
  use Packer;
  
  static method new : int () {
    
    {
      my $packer = Packer->new;
      
      unless ($packer is_type Packer) {
        return 0;
      }
    }
    
    return 1;
  }
  
  static method pack : int () {
    
    my $packer = Packer->new;
    
    {
      my $objects = [(object)Fn->INT_MIN];
      
      my $template = "l";
      
      my $binary = $packer->pack($template, $objects);
      
      unless (length $binary == 4) {
        return 0;
      }
      
      my $objects_again = $packer->unpack($template, $binary);
      
      unless (@$objects_again == 1) {
        return 0;
      }
      
      unless ($objects_again->[0] is_type Int) {
        return 0;
      }
      
      unless ($objects_again->[0]->(int) == Fn->INT_MIN) {
        return 0;
      }
      
    }
    
    return 1;
  }
  
  static method unpack : int () { return 1; }
  
}
